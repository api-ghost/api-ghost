package com.apighost.parser;

import com.apighost.model.GenerateBody;
import com.apighost.model.ObjectMapperHolder;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * Represents a structured JSON payload generated by an AI or external system.
 *
 * <p>This class holds a JSON string (typically extracted from an AI model response)
 * and is used as a container to be passed through application logic or stored for later use.</p>
 *
 * @author kobenlys
 * @version BETA-0.0.1
 */
public class OpenAiResponseParser {

    private static final ObjectMapper objectMapper = ObjectMapperHolder.getInstance();

    /**
     * Extracts the list of generated data from the OpenAI API JSON response.
     *
     * @param jsonResponse the raw JSON string returned from the OpenAI API
     * @return a list of {@link GenerateBody} representing the key-value data structure
     * @throws JsonProcessingException  if the input JSON cannot be parsed
     * @throws IllegalArgumentException if the JSON structure does not contain expected fields
     */
    public static GenerateBody extractResponse(String jsonResponse)
        throws JsonProcessingException {

        if (jsonResponse == null || jsonResponse.isEmpty()) {
            return new GenerateBody();
        }

        JsonNode rootResponse = objectMapper.readTree(jsonResponse);

        if (rootResponse.path("choices").isEmpty()) {
            throw new IllegalArgumentException(
                "Unexpected response format: 'choices' array is empty.");
        }

        String generatedBody = rootResponse.path("choices").get(0).path("message")
            .path("content").asText();
        return new GenerateBody(generatedBody);
    }
}
